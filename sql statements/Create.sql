CREATE TABLE COOKBOOK(
	Title			TEXT		NOT NULL,
	Author			TEXT		NOT NULL,
	ID				INTEGER 	PRIMARY KEY
);


CREATE TABLE RECIPE(
	Name			TEXT		NOT NULL,
	Directions		TEXT		NOT NULL,
	CookbookID		INT			NOT NULL,
	ID				INTEGER		PRIMARY KEY,
	-- FK
	CONSTRAINT		COOKBOOK_FK			FOREIGN KEY(CookbookID)
					REFERENCES COOKBOOK(ID)
					ON DELETE CASCADE
					ON UPDATE CASCADE
);


CREATE TABLE INGREDIENT(
	Name			TEXT		NOT NULL,
	ID				INTEGER		PRIMARY KEY
);


CREATE TABLE INGREDIENTLINE(
	RecipeID		INT					NOT NULL,
	IngredientID	INT					NOT NULL,
	Quantity		REAL        		NOT NULL,
	Unit			TEXT    		    NOT NULL,
	ID				INTEGER				PRIMARY KEY,
	-- FK
	CONSTRAINT		INGRIDIENT_FK		FOREIGN KEY(IngredientID)
					REFERENCES INGREDIENT(ID)
					ON DELETE CASCADE
					ON UPDATE CASCADE,

	CONSTRAINT		RECIPEL_FK			FOREIGN KEY(RecipeID)
					REFERENCES RECIPE(ID)
					ON DELETE CASCADE
					ON UPDATE CASCADE
);



// Inserts

INSERT INTO COOKBOOK VALUES ("Mad", "Nikolaj Lauridsen", null);

SELECT Title, Author, ID FROM COOKBOOK;

INSERT INTO RECIPE VALUES ("@Name", "@Instructions", @BookID, null);
INSERT INTO RECIPE VALUES ("Skysovs", "Ting", 1, null);
SELECT Name, Directions, CookbookID, ID FROM RECIPE WHERE ID=1;

INSERT INTO INGREDIENT VALUES ("Æg", null);
INSERT INTO INGREDIENT VALUES ("Mælk", null);
SELECT * FROM INGREDIENT;

INSERT INTO INGREDIENTLINE VALUES (1,1,2,"stk",null);
INSERT INTO INGREDIENTLINE VALUES (1,1,5,"dL",null);

SELECT * FROM INGREDIENTLINE;

// Get ingredients by recipe Name
SELECT I.Name, IL.Quantity, IL.Unit FROM INGREDIENT AS I
INNER JOIN INGREDIENTLINE AS IL
ON IL.IngredientID = I.ID
WHERE IL.RecipeID = (SELECT ID FROM RECIPE WHERE Name = "Pandekager");

// Get ingredients by ID
SELECT I.Name, IL.Quantity, IL.Unit FROM INGREDIENT AS I 
INNER JOIN INGREDIENTLINE AS IL 
ON IL.IngredientID = I.ID 
WHERE IL.RecipeID = @ID;